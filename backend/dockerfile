# backend/Dockerfile

# Etapa 1: Usar una imagen base de Python delgada
FROM python:3.11-slim

# Establecer el directorio de trabajo dentro del contenedor
WORKDIR /app

# Instalar poetry (si lo usas) o preparar para requirements.txt
# Si no usas Poetry, puedes saltarte esta parte y la siguiente
# RUN pip install poetry
# COPY poetry.lock pyproject.toml ./
# RUN poetry config virtualenvs.create false && poetry install --no-root --no-dev

# Copiar el archivo de dependencias primero para aprovechar el cache de Docker
COPY ./requirements.txt .

# Instalar las dependencias
RUN pip install --no-cache-dir --upgrade -r requirements.txt

# Copiar el resto del c贸digo de la aplicaci贸n
COPY ./app ./app

# Exponer el puerto en el que corre la aplicaci贸n
EXPOSE 8000

# Comando para iniciar la aplicaci贸n con Uvicorn
# El host 0.0.0.0 es crucial para que sea accesible desde fuera del contenedor
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

